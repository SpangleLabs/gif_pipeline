<!DOCTYPE html>
<html lang="en">
<head>
<title>{{ chat_title }}</title>
<style>
    th {
        background-color: #FDFD96;
    }
    table {
        border: 2px solid black;
        border-collapse: collapse;
    }
    td, th {
        border: 1px solid grey;
    }
    th.tag_in_config {
        font-weight: bold;
    }
    body {
        font-family: sans-serif;
    }
    #messages {
        display: grid;
        grid-template-columns: repeat(auto-fit, 400px);
        gap: 10px;
    }
    .message_container {
        padding: 10px;
        background: #cfc;
        border: 3px solid #8f8;
        border-radius: 6px;
    }
    .video_thumbnail img {
        max-width: 100%;
    }
    .video_embed {
        width: 100%;
        align-content: center;
        margin: auto;
    }
    .video_embed_close {
        float: right;
    }
    .tags_table {
        height: 100%;
        vertical-align: bottom;
    }
    figure {
        position: relative;
    }
    figcaption {
        position: absolute;
        padding: 5px 10px;
        top: 20px;
        background-color: rgba(240, 240, 240, 0.6);
    }
</style>
</head>
<body>
    <h1>{{ chat_title }}</h1>
    <b>Handle:</b> {{ handle }}<br />
    <b>Telegram link:</b> https://t.me/{{ handle }}<br />
    <b>Tag config:</b><br />
    <table>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>In config?</th>
            <th>Message count</th>
        </tr>
        {% for channel_tag in channel_tag_data.list_channel_tags() %}
            <tr>
                <td class="{{ "tag_in_config" if channel_tag.in_config else "" }}">{{ channel_tag.name }}</td>
                <td>{{ channel_tag.tag_type }}</td>
                <td>{{ "Y" if channel_tag.in_config else "N" }}</td>
                <td>{{ channel_tag.message_count }}</td>
            </tr>
        {% endfor %}
    </table>
    <h2>Messages:</h2>
    <div id="messages">
        {% for message in message_list %}
        <div class="message_container" data-telegram-handle="{{ handle }}/{{ message['msg_id'] }}">
            <div class="video_thumbnail">
                <figure>
                    <img src="data:image/jpg;base64, {{ message['thumbnail'] }}" alt="Thumbnail for video in message ID {{ message['msg_id'] }}" />
                    <figcaption>Post #{{ message['msg_id'] }}. Click to display video</figcaption>
                </figure>
            </div>
            <div class="video_embed" style="display: none;">
                <div class="video_embed_close">
                    <svg height="30px" width="30px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
	 viewBox="0 0 26 26" xml:space="preserve">
                        <g>
                            <path style="fill:#030104;" d="M21.125,0H4.875C2.182,0,0,2.182,0,4.875v16.25C0,23.818,2.182,26,4.875,26h16.25
                                C23.818,26,26,23.818,26,21.125V4.875C26,2.182,23.818,0,21.125,0z M18.78,17.394l-1.388,1.387c-0.254,0.255-0.67,0.255-0.924,0
                                L13,15.313L9.533,18.78c-0.255,0.255-0.67,0.255-0.925-0.002L7.22,17.394c-0.253-0.256-0.253-0.669,0-0.926l3.468-3.467
                                L7.221,9.534c-0.254-0.256-0.254-0.672,0-0.925l1.388-1.388c0.255-0.257,0.671-0.257,0.925,0L13,10.689l3.468-3.468
                                c0.255-0.257,0.671-0.257,0.924,0l1.388,1.386c0.254,0.255,0.254,0.671,0.001,0.927l-3.468,3.467l3.468,3.467
                                C19.033,16.725,19.033,17.138,18.78,17.394z"/>
                        </g>
                    </svg>
                </div>
            </div>
            <div class="tags_table">
                <table>
                    {% for tag_name, tag_values in channel_tag_data.table_dict_for_msg(message).items() %}
                        <tr>
                        <th class="{{ "tag_in_config" if tag_name in channel_tag_data.tag_names_in_config() else "" }}">{{ tag_name }}</th>
                        <td>
                        {% for tag_value in tag_values %}
                            {{ format_tag_value(tag_value) }}
                            {{ ", " if not loop.last else "" }}
                        {% endfor %}
                        </td>
                        </tr>
                    {% endfor %}
                </table>
            </div>
        </div>
        {% endfor %}
    </div>
<script>
    function showVideo(elem) {
        const containerElem = elem.closest(".message_container");
        containerElem.querySelector(".video_embed").style.display = "block";
        const telegramHandle = containerElem.getAttribute("data-telegram-handle")
        const scriptElem = document.createElement("script");
        scriptElem.setAttribute("async", "1")
        scriptElem.setAttribute("src", "https://telegram.org/js/telegram-widget.js?22")
        scriptElem.setAttribute("data-telegram-post", telegramHandle)
        scriptElem.setAttribute("data-width", "70%")
        containerElem.querySelector(".video_embed").appendChild(scriptElem);
        containerElem.querySelector(".video_thumbnail").style.display = "none";
    }

    function hideVideo(elem) {
        const containerElem = elem.closest(".message_container");
        containerElem.querySelector(".video_embed").style.display = "none";
        containerElem.querySelector(".video_embed iframe").remove();
        containerElem.querySelector(".video_embed script").remove();
        containerElem.querySelector(".video_thumbnail").style.display = "block";
    }

    const videoThumbnails = document.querySelectorAll(".video_thumbnail")
    for (const videoThumbnail of videoThumbnails) {
        videoThumbnail.addEventListener("click", () => showVideo(videoThumbnail))
    }
    const videoCloseButtons = document.querySelectorAll(".video_embed_close")
    for (const videoCloseButton of videoCloseButtons) {
        videoCloseButton.addEventListener("click", () => hideVideo(videoCloseButton))
    }

</script>
</body>
</html>